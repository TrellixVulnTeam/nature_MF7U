*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 131, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* fix for animation: stops the element from moving..determines if the backpart of an element is visible for a user */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  margin-right: -35px;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
  animation-delay: 3s;
  animation-iteration-count: 3;
  animation-timing-function: ease;
  */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  margin-right: -17.4px;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  /* short for transition all properites will be animated */
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}

/*  the Y axis goes from top to bottom: to go up its - to go down it's + */
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/* moves in relation to the link state -- original state*/
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/* after sudo element used to correct fixes */
.btn::after {
  /* have to content even if empty and display: want to be same as element referring to*/
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* absolute positioning needs to have a reference, the reference is the first element with the position relative it can find so in this case it would be the header but we wnat it to be the button so need to set the postition of the button to relative*/
  position: absolute;
  top: 0;
  left: 0;
  /* z index defines the position of elements if on top of one another -1 will be behind the button in this case...we want to see when hover tho*/
  z-index: -1;
  transition: all 0.4s;
}

.btn:hover::after {
  /* scale increases the element so 2 will appear double the size was before  opacity: 0sets something to invisible */
  transform: scaleX(1.5) scaleY(1.6);
  opacity: 0;
}

.btn--white::after {
  background-color: #fff;
}

.btn--animated {
  /* animation name, duration, timing function, delay */
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}

/*# sourceMappingURL=style.comp.css.map */
